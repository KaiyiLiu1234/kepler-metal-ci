name: Equinix Metal e2e

on:
  workflow_dispatch:
    inputs:
      target_models:
        description: 'Comma Separated List of Models to Train. Format: model_type/feature_type/trainer_name'
        required: false
        default: 'AbsPower/BPFOnly/SGDRegressorTrainer,AbsPower/BPFOnly/LinearRegressionTrainer,DynPower/BPFOnly/LogarithmicRegressionTrainer'

permissions:
  pull-requests: write
  contents: write
  repository-projects: write
  packages: write

jobs:    
  Create-runner:
    name: "Create Runner"
    uses: ./.github/workflows/create_equinix_runner.yml
    secrets: inherit

  Validate:
    name: "Validate"
    needs: Create-runner
    runs-on: self-hosted
    continue-on-error: true
    outputs:
      runner-name: ${{ runner.name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Setup Runner Action
        uses: ./.github/actions/setup-action
      
      - name: Run Trainer Action
        uses: ./.github/actions/train-action
        with:
          model_export_path: /tmp/trained-equinix-models
      
      - name: Upload models as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: trained-equinix-models
          path: /tmp/trained-equinix-models
          retention-days: 2
      
      - name: check trained equinix paths
        run: |
          ls -l /tmp/trained-equinix-models/AbsPower
          ls -l /tmp/trained-equinix-models/DynPower
      
      - name: Run Validation Playbooks
        run: |
          cd ${GITHUB_WORKSPACE}/ansible
          cp roles/kvm_vm/files/meta-data /tmp/meta-data
          cp cloud-init-script.sh /tmp/cloud-init-script.sh
          echo "Create VM"
          ansible-playbook -i inventory.yml kvm_playbook.yml
          echo "Install SSH tunnel"
          ansible-playbook ssh_tunnel_playbook.yml
          echo "Install Prometheus"
          ansible-playbook -i inventory.yml metrics_playbook.yml
          echo "Install Kepler"
          ansible-playbook -i inventory.yml -vvv kepler_playbook.yml -e "target_host=localhost"
          echo "Create ssh tunnel"
          ansible-playbook -i inventory.yml ssh_tunnel_playbook.yml

          echo "Install Model Server"
          ansible-playbook -i inventory.yml -vvv model_server_playbook.yml
          
          echo "Pass Trained Models to VM"
          ansible-playbook -i inventory.yml -v deploy_http_model_server.yml
          
          target_models_list="${{ github.event.inputs.target_models }}"
          IFS=',' read -r -a models <<< "$target_models_list"
          for model in "${models[@]}"
          do
            echo "Running Model Server Playbook: $model"
            model_url="http://localhost:8080/${model}_-1.zip"
            ansible-playbook -i inventory.yml -vvv model_server_restart.yml \
              -e "node_components_init_url=$model_url"
            echo "Run validation test"
            ansible-playbook -vvv kepler_validator.yml
            echo "Validation Finished"
          done
          
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  Cleanup:
    name: "Cleanup"
    needs: [Validate]
    uses: ./.github/workflows/clean_equinix_runner.yml
    secrets: inherit
    with:
      runner_name: ${{ needs.Validate.outputs.runner-name }}